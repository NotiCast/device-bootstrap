---
- hosts: all
  gather_facts: false
  tasks:
  - name: Deploy SSH key
    authorized_key:
      key: "{{ lookup('file', item) }}"
      user: pi
    with_fileglob: 'keys/*.pub'

  - name: Deploy SSH key [Root]
    authorized_key:
      key: "{{ lookup('file', item) }}"
      user: root
    with_fileglob: 'keys/*.pub'

  - name: Disable apt-daily.timer for Orange Pi Armbian
    command: systemctl disable apt-daily.timer
    ignore_errors: true

  - name: Update System
    apt:
      update_cache: true
      upgrade: yes

  - name: Install required tools
    apt:
      name: "{{ item }}"
    with_items:
      - python3
      - libpython3-dev
      - libffi-dev
      - python3-pip
      - python3-setuptools
      - python3-wheel
      - pulseaudio
      - ffmpeg

  - name: Configure PulseAudio to not use module-suspend-on-idle
    lineinfile:
      path: /etc/pulse/default.pa
      regexp: "module-suspend-on-idle"
      line: "#load-module module-suspend-on-idle"

  - name: Set up systemd for user
    command: loginctl enable-linger pi
    changed_when: false

  - name: Disable SSH password authentication
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "^PasswordAuthentication"
      line: "PasswordAuthentication no"

  - name: Fix audio for Orange Pi Zero
    lineinfile:
      path: /boot/armbianEnv.txt
      regexp: "^overlays="
      line: "overlays=usbhost2 usbhost3 analog-codec"

  - name: Enable systemd unit to auto-mount flash drives
    block:
    - copy:
        src: automount-flashdrive.service
        dest: /etc/systemd/system/automount-flashdrive.service
    - shell: |
        systemctl daemon-reload
        systemctl enable automount-flashdrive.service

  - name: Install automated update system via ansible-pull
    block:
    - command: pip3 install ansible
    - apt: name=ansible
    - file: path=/etc/ansible state=directory
    - copy:
        dest: /etc/ansible/ansible-pull.env
        content: |
          GIT_REPO=https://github.com/NotiCast/device-bootstrap.git
          GIT_BRANCH=master
          GIT_PATH=/etc/ansible/repos/device-bootstrap
          PLAYBOOK_FILE=/etc/ansible/repos/device-bootstrap/ansible/main.yml
          ANSIBLE_LOCAL_TEMP=/root/.ansible/tmp
          ANSIBLE_REMOTE_TEMP=/root/.ansible/tmp
    - copy:
        dest: /etc/systemd/system/ansible-pull.service
        content: |
          [Unit]
          Description=Run ansible-pull to get system updates
          After=network.target

          [Service]
          EnvironmentFile=/etc/ansible/ansible-pull.env
          ExecStart=/bin/bash -c "/usr/local/bin/ansible-pull \
              -U $GIT_REPO \
              -C $GIT_BRANCH \
              -d $GIT_PATH \
              -c local \
              -i '%H,' \
              $PLAYBOOK_FILE"
          Type=oneshot

          [Install]
          WantedBy=multi-user.target
    - copy:
        dest: /etc/systemd/system/ansible-pull.timer
        content: |
          [Unit]
          Description=Run ansible-pull every half hour

          [Timer]
          OnCalendar=0/30:00

          [Install]
          WantedBy=timers.target
    - command: systemctl enable ansible-pull.service
    - command: systemctl enable ansible-pull.timer
